<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>Accepter</value>
  </data>
  <data name="AdvancedSearch" xml:space="preserve">
    <value>Recherche avancée</value>
  </data>
  <data name="BeforeChapter" xml:space="preserve">
    <value>Chapitre précédent</value>
  </data>
  <data name="Bibles" xml:space="preserve">
    <value>Bibles</value>
  </data>
  <data name="BibleTitle" xml:space="preserve">
    <value>Versions bibliques</value>
  </data>
  <data name="Book" xml:space="preserve">
    <value>Livre</value>
  </data>
  <data name="Books" xml:space="preserve">
    <value>Livres</value>
  </data>
  <data name="ChangeImage" xml:space="preserve">
    <value>Changer l'image</value>
  </data>
  <data name="Chapter" xml:space="preserve">
    <value>Chapitres</value>
  </data>
  <data name="ChapterVerses" xml:space="preserve">
    <value>Chapitre et vers</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirmer</value>
  </data>
  <data name="ConfirmPass" xml:space="preserve">
    <value>Confirmer votre mot de passe</value>
  </data>
  <data name="Congratulation" xml:space="preserve">
    <value>Félicitations</value>
  </data>
  <data name="EmailPlace" xml:space="preserve">
    <value>Tapez votre email</value>
  </data>
  <data name="EmailValidation" xml:space="preserve">
    <value>Vous devez entrer un email</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="Example" xml:space="preserve">
    <value>E.x 1: 3-10</value>
  </data>
  <data name="Example2" xml:space="preserve">
    <value>tapez le mot-clé Ex: love</value>
  </data>
  <data name="ForgotPass" xml:space="preserve">
    <value>Vous avez oublié votre mot de passe?</value>
  </data>
  <data name="InternetValidation" xml:space="preserve">
    <value>Vous devez avoir une connexion internet ...</value>
  </data>
  <data name="KeyWord" xml:space="preserve">
    <value>Mot-clé *</value>
  </data>
  <data name="LastNames" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Connexion</value>
  </data>
  <data name="LoginFacebook" xml:space="preserve">
    <value>Facebook Login</value>
  </data>
  <data name="LoginInstagram" xml:space="preserve">
    <value>Instagram Login</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Se déconnecter</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="MenuHambSearch1" xml:space="preserve">
    <value>Recherche avancée</value>
  </data>
  <data name="MenuHambSearch2" xml:space="preserve">
    <value>Rechercher un mot clé</value>
  </data>
  <data name="Names" xml:space="preserve">
    <value>Noms</value>
  </data>
  <data name="NextChapter" xml:space="preserve">
    <value>Chapitre suivant</value>
  </data>
  <data name="PlaceLastNam" xml:space="preserve">
    <value>Tapez vos noms de famille</value>
  </data>
  <data name="PlaceNames" xml:space="preserve">
    <value>Entrez vos noms</value>
  </data>
  <data name="PlacePass" xml:space="preserve">
    <value>Entrez votre mot de passe</value>
  </data>
  <data name="PlacePhone" xml:space="preserve">
    <value>Tapez votre téléphone</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>S'enregistrer</value>
  </data>
  <data name="Rememberme" xml:space="preserve">
    <value>Recordarme </value>
  </data>
  <data name="RequiredKeyword" xml:space="preserve">
    <value>Le mot-clé est requis</value>
  </data>
  <data name="ResultSearch" xml:space="preserve">
    <value>Résultats de la recherche</value>
  </data>
  <data name="SearchButton" xml:space="preserve">
    <value>Chercher</value>
  </data>
  <data name="SearchByKeyword" xml:space="preserve">
    <value>Rechercher un mot clé</value>
  </data>
  <data name="SearchByVerse" xml:space="preserve">
    <value>Recherche par vers</value>
  </data>
  <data name="SelectBook" xml:space="preserve">
    <value>Sélectionnez un livre</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>S'enregistrer</value>
  </data>
  <data name="SomethingWrong" xml:space="preserve">
    <value>Quelque chose s'est mal passé, réessayez ...</value>
  </data>
  <data name="Telephone" xml:space="preserve">
    <value>Téléphone</value>
  </data>
  <data name="ValidationPassword" xml:space="preserve">
    <value>Vous devez entrer un mot de passe ...</value>
  </data>
  <data name="ValidFormat" xml:space="preserve">
    <value>Vous devez chercher dans le format suivant Chapitre: verset début - verset final</value>
  </data>
  <data name="ValidVerses" xml:space="preserve">
    <value>Ce champ doit contenir au moins 3 chiffres et les caractères: -</value>
  </data>
  <data name="Verses" xml:space="preserve">
    <value>Versets</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="FromCamera" xml:space="preserve">
    <value>De la caméra</value>
  </data>
  <data name="FromGallery" xml:space="preserve">
    <value>De la galerie</value>
  </data>
  <data name="KeysMatch" xml:space="preserve">
    <value>les deux mots de passe doivent correspondre</value>
  </data>
  <data name="LocationImage" xml:space="preserve">
    <value>Où voulez-vous prendre la photo?</value>
  </data>
  <data name="SixCharacterPass" xml:space="preserve">
    <value>votre mot de passe doit contenir au moins six chiffres</value>
  </data>
  <data name="SuccessRegister" xml:space="preserve">
    <value>L'utilisateur enregistré avec succès peut maintenant entrer avec votre mot de passe et email</value>
  </data>
  <data name="TypeConfirmPass" xml:space="preserve">
    <value>Vous devez confirmer le mot de passe</value>
  </data>
  <data name="TypeEmail" xml:space="preserve">
    <value>Entrez un email ...</value>
  </data>
  <data name="TypeEmailValid" xml:space="preserve">
    <value>vous devez entrer un email valide ...</value>
  </data>
  <data name="TypeLastNames" xml:space="preserve">
    <value>veuillez taper vos noms de famille ...</value>
  </data>
  <data name="TypeNames" xml:space="preserve">
    <value>por favor digite sus nombres...</value>
  </data>
  <data name="TypePhoneNumber" xml:space="preserve">
    <value>s'il vous plaît taper leurs noms ...</value>
  </data>
</root>