<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>Got it !!</value>
  </data>
  <data name="AdvancedSearch" xml:space="preserve">
    <value>Advanced Search</value>
  </data>
  <data name="BeforeChapter" xml:space="preserve">
    <value>Before chapter</value>
  </data>
  <data name="Bibles" xml:space="preserve">
    <value>Bibles</value>
  </data>
  <data name="BibleTitle" xml:space="preserve">
    <value>Bible versions</value>
  </data>
  <data name="Book" xml:space="preserve">
    <value>Book</value>
  </data>
  <data name="Books" xml:space="preserve">
    <value>Books</value>
  </data>
  <data name="ChangeImage" xml:space="preserve">
    <value>Change Image</value>
  </data>
  <data name="Chapter" xml:space="preserve">
    <value>Chapter</value>
  </data>
  <data name="ChapterVerses" xml:space="preserve">
    <value>Chapter and Verses</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmPass" xml:space="preserve">
    <value>Confirm your password...</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="EmailPlace" xml:space="preserve">
    <value>Type your email here...</value>
  </data>
  <data name="EmailValidation" xml:space="preserve">
    <value>you must enter an Email...</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>There was an error!!</value>
  </data>
  <data name="Example" xml:space="preserve">
    <value>e.g 1:3-10</value>
  </data>
  <data name="Example2" xml:space="preserve">
    <value>type any keyword e.g heaven</value>
  </data>
  <data name="ForgotPass" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="KeyWord" xml:space="preserve">
    <value>Keyword *</value>
  </data>
  <data name="LastNames" xml:space="preserve">
    <value>Last names</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginFacebook" xml:space="preserve">
    <value>Facebook Login</value>
  </data>
  <data name="LoginInstagram" xml:space="preserve">
    <value>Instagram Login</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="Names" xml:space="preserve">
    <value>Names</value>
  </data>
  <data name="NextChapter" xml:space="preserve">
    <value>Next chapter</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PlaceLastNam" xml:space="preserve">
    <value>Type your last names...</value>
  </data>
  <data name="PlaceNames" xml:space="preserve">
    <value>Type your names...</value>
  </data>
  <data name="PlacePass" xml:space="preserve">
    <value>Type your password here...</value>
  </data>
  <data name="PlacePhone" xml:space="preserve">
    <value>Type your telephone...</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Rememberme" xml:space="preserve">
    <value>Rememberme</value>
  </data>
  <data name="ResultSearch" xml:space="preserve">
    <value>Result of search</value>
  </data>
  <data name="SearchButton" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchByKeyword" xml:space="preserve">
    <value>Search by keyword</value>
  </data>
  <data name="SearchByVerse" xml:space="preserve">
    <value>Search by Verse</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="Telephone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="Verses" xml:space="preserve">
    <value>Verses</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Congratulation" xml:space="preserve">
    <value>Congratulation</value>
  </data>
  <data name="FromCamera" xml:space="preserve">
    <value>From Camera</value>
  </data>
  <data name="FromGallery" xml:space="preserve">
    <value>From Gallery</value>
  </data>
  <data name="InternetValidation" xml:space="preserve">
    <value>you must connect to internet...</value>
  </data>
  <data name="KeysMatch" xml:space="preserve">
    <value>both keys must match...</value>
  </data>
  <data name="LocationImage" xml:space="preserve">
    <value>Where do you want to take the image?</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="MenuHambSearch1" xml:space="preserve">
    <value>Advanced search</value>
  </data>
  <data name="MenuHambSearch2" xml:space="preserve">
    <value>Search by key word</value>
  </data>
  <data name="RequiredKeyword" xml:space="preserve">
    <value>The keyword is required, try again</value>
  </data>
  <data name="SelectBook" xml:space="preserve">
    <value>Select a Book</value>
  </data>
  <data name="SixCharacterPass" xml:space="preserve">
    <value>you password must contain at least six characters...</value>
  </data>
  <data name="SomethingWrong" xml:space="preserve">
    <value>Something was wrong, please try again later...</value>
  </data>
  <data name="SuccessRegister" xml:space="preserve">
    <value>User has been registered sucessfully, already you can enter to application with this password and email</value>
  </data>
  <data name="TypeConfirmPass" xml:space="preserve">
    <value>you must confirm password</value>
  </data>
  <data name="TypeEmail" xml:space="preserve">
    <value>you must type an email...</value>
  </data>
  <data name="TypeEmailValid" xml:space="preserve">
    <value>you must enter an email valid...</value>
  </data>
  <data name="TypeLastNames" xml:space="preserve">
    <value>you must type last names...</value>
  </data>
  <data name="TypeNames" xml:space="preserve">
    <value>you must type names...</value>
  </data>
  <data name="TypePhoneNumber" xml:space="preserve">
    <value>you must enter a telephone number...</value>
  </data>
  <data name="ValidationPassword" xml:space="preserve">
    <value>you must enter a password...</value>
  </data>
  <data name="ValidFormat" xml:space="preserve">
    <value>you must type search in the following ( format ) chapter: verse start - verse end</value>
  </data>
  <data name="ValidVerses" xml:space="preserve">
    <value>the field verses should contain at least some of this character: digits : -, it doesn't allow words or letter...</value>
  </data>
  <data name="MyProfile" xml:space="preserve">
    <value>My profile</value>
  </data>
</root>